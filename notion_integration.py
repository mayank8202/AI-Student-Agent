from notion_client import Client

def notes_to_notion(notion_api_token, notion_page_id, notes):
    notion = Client(auth=notion_api_token)
    blocks = format_notes_for_notion(notes)
    try:
        notion.pages.create(
            parent={"type": "page_id", "page_id": notion_page_id},
            properties={"title": [{"type": "text", "text": {"content": "Generated Notes"}}]},
            children=blocks,
        )
        print("Notes successfully added to Notion!")
    except Exception as e:
        print(f"Error sending notes to Notion: {e}")
def format_notes_for_notion(notes):
    """
    Convert the notes into Notion blocks for structured formatting.
    Args:
        notes (str): The structured notes generated by GPT-4.
    Returns:
        list: A list of Notion blocks to send to the Notion API.
    """
    # Split the notes by lines and create blocks
    blocks = []
    for line in notes.split("\n"):
        if line.startswith("# "):  # Convert headings
            blocks.append({
                "object": "block",
                "type": "heading_1",
                "heading_1": {
                    "rich_text": [{"type": "text", "text": {"content": line[2:]}}],
                },
            })
        elif line.startswith("## "):  # Convert subheadings
            blocks.append({
                "object": "block",
                "type": "heading_2",
                "heading_2": {
                    "rich_text": [{"type": "text", "text": {"content": line[3:]}}],
                },
            })
        elif line.startswith("### "):  # Convert sub-subheadings
            blocks.append({
                "object": "block",
                "type": "heading_3",
                "heading_3": {
                    "rich_text": [{"type": "text", "text": {"content": line[4:]}}],
                },
            })
        elif line.startswith("- "):  # Convert bullet points
            blocks.append({
                "object": "block",
                "type": "bulleted_list_item",
                "bulleted_list_item": {
                    "rich_text": [{"type": "text", "text": {"content": line[2:]}}],
                },
            })
        elif line.strip():  # Convert paragraphs
            blocks.append({
                "object": "block",
                "type": "paragraph",
                "paragraph": {
                    "rich_text": [{"type": "text", "text": {"content": line.strip()}}],
                },
            })
    return blocks
